[{"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/reportWebVitals.js":"1","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/App.js":"2","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/index.js":"3","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Header/Header.jsx":"4","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/headerStyle.js":"5","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/material-kit-pro-react.js":"6","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/jss/tooltipsStyle.js":"7","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Header/CustomDropdown.jsx":"8","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Header/HeaderLinks.jsx":"9","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/landingPageStyle.js":"10","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Parallax/Parallax.jsx":"11","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/customDropdownStyle.js":"12","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Grid/GridContainer.js":"13","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/buttonStyle.js":"14","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/CustomButtons/Button.js":"15","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/parallaxStyle.js":"16","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Grid/GridItem.js":"17","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Layout/Layout.jsx":"18","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/FeaturedSection/FeaturedSection.jsx":"19","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/jss/featuresStyle.js":"20","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/headerLinksStyle.js":"21","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Footer/Footer.jsx":"22","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/footerStyle.js":"23","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/service/ApexAutoMoversService.js":"24","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/TeamSection/TeamSection.jsx":"25","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/TeamSection/ProfileCards.jsx":"26","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/VehicleSection/VehicleSection.jsx":"27"},{"size":362,"mtime":1609803274678,"results":"28","hashOfConfig":"29"},{"size":1048,"mtime":1614462992865,"results":"30","hashOfConfig":"29"},{"size":500,"mtime":1609803274677,"results":"31","hashOfConfig":"29"},{"size":4072,"mtime":1610849702949,"results":"32","hashOfConfig":"29"},{"size":4775,"mtime":1610761439887,"results":"33","hashOfConfig":"29"},{"size":10323,"mtime":1610744913924,"results":"34","hashOfConfig":"29"},{"size":996,"mtime":1610748142370,"results":"35","hashOfConfig":"29"},{"size":4729,"mtime":1610748555074,"results":"36","hashOfConfig":"29"},{"size":2946,"mtime":1610759346222,"results":"37","hashOfConfig":"29"},{"size":1237,"mtime":1610760357496,"results":"38","hashOfConfig":"29"},{"size":1931,"mtime":1610813167662,"results":"39","hashOfConfig":"29"},{"size":4896,"mtime":1610745126333,"results":"40","hashOfConfig":"29"},{"size":779,"mtime":1610814133136,"results":"41","hashOfConfig":"29"},{"size":18771,"mtime":1610814412278,"results":"42","hashOfConfig":"29"},{"size":2027,"mtime":1610814367439,"results":"43","hashOfConfig":"29"},{"size":3915,"mtime":1610812116439,"results":"44","hashOfConfig":"29"},{"size":834,"mtime":1610814133138,"results":"45","hashOfConfig":"29"},{"size":2032,"mtime":1614462967700,"results":"46","hashOfConfig":"29"},{"size":12021,"mtime":1613729329972,"results":"47","hashOfConfig":"29"},{"size":2007,"mtime":1610839880987,"results":"48","hashOfConfig":"29"},{"size":4576,"mtime":1610747341549,"results":"49","hashOfConfig":"29"},{"size":1923,"mtime":1613676191289,"results":"50","hashOfConfig":"29"},{"size":1100,"mtime":1613676851352,"results":"51","hashOfConfig":"29"},{"size":1137,"mtime":1614409992936,"results":"52","hashOfConfig":"29"},{"size":2946,"mtime":1614290230168,"results":"53","hashOfConfig":"29"},{"size":3141,"mtime":1614291626480,"results":"54","hashOfConfig":"29"},{"size":12204,"mtime":1614461484255,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"9zgpwv",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/reportWebVitals.js",[],["118","119"],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/App.js",["120","121"],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/index.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Header/Header.jsx",["122"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ViewCarousel from \"@material-ui/icons/ViewCarousel\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\";\nimport styles from \"../../assets/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nconst Header = (props) => {\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (changeColorOnScroll)\n      window.addEventListener(\"scroll\", headerColorChange);\n\n    return function cleanUp() {\n      if (changeColorOnScroll)\n        window.removeEventListener(\"scroll\", headerColorChange);\n    };\n  });\n\n  const headerColorChange = () => {\n    const { color, changeColorOnScroll } = props;\n    const windowsScrollTop = window.pageYOffset;\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const { color, links, brand, fixed, absolute, changeColorOnScroll } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed,\n  });\n  return (\n    <AppBar className={appBarClasses}>\n      <Toolbar className={classes.container}>\n        <Button className={classes.title}>\n          <Link to=\"/\">{brand}</Link>\n        </Button>\n        <Hidden smDown implementation=\"css\" className={classes.hidden}>\n          <div className={classes.collapse}>{links}</div>\n        </Hidden>\n        <Hidden mdUp>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <Hidden mdUp implementation=\"js\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={\"right\"}\n          open={mobileOpen}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          onClose={handleDrawerToggle}\n        >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n            className={classes.closeButtonDrawer}\n          >\n            <Close />\n          </IconButton>\n          <div className={classes.appResponsive}>{links}</div>\n        </Drawer>\n      </Hidden>\n    </AppBar>\n  );\n};\n\nHeader.defaultProp = {\n  color: \"white\",\n};\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"transparent\",\n    \"white\",\n    \"rose\",\n    \"dark\",\n  ]),\n  links: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"danger\",\n      \"transparent\",\n      \"white\",\n      \"rose\",\n      \"dark\",\n    ]).isRequired,\n  }),\n};\n\nexport default Header;\n","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/headerStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/material-kit-pro-react.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/jss/tooltipsStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Header/CustomDropdown.jsx",["123"],"import React, { useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"../../assets/components/customDropdownStyle\";\n\nconst useStyles = makeStyles(styles);\n\n//\n//\n//\n\nconst CustomDropdown = (props) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n  const handleClose = (event) => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(null);\n  };\n\n  const handleCloseMenu = (param) => {\n    setAnchorEl(null);\n    if (props && props.onClick) {\n      props.onClick(param);\n    }\n  };\n  const {\n    buttonText,\n    buttonIcon,\n    dropdownList,\n    buttonProps,\n    dropup,\n    dropdownHeader,\n    caret,\n    hoverColor,\n    dropPlacement,\n    rtlActive,\n    noLiPadding,\n    innerDropDown,\n    navDropdown,\n  } = props;\n\n  const caretClasses = classNames({\n    [classes.caret]: true,\n    [classes.caretDropup]: dropup && !anchorEl,\n    [classes.caretActive]: Boolean(anchorEl) && !dropup,\n    [classes.caretRTL]: rtlActive,\n  });\n  const dropdownItem = classNames({\n    [classes.dropdownItem]: true,\n    [classes[hoverColor + \"Hover\"]]: true,\n    [classes.noLiPadding]: noLiPadding,\n    [classes.dropdownItemRTL]: rtlActive,\n  });\n\n  const dropDownMenu = (\n    <MenuList role=\"menu\" className={classes.menuList}>\n      {dropdownHeader !== undefined ? (\n        <MenuItem\n          onClick={() => handleCloseMenu(dropdownHeader)}\n          className={classes.dropdownHeader}\n        >\n          {dropdownHeader}\n        </MenuItem>\n      ) : null}\n      {dropdownList.map((prop, key) => {\n        if (prop.divider) {\n          return (\n            <Divider\n              key={key}\n              onClick={() => handleCloseMenu(\"divider\")}\n              className={classes.dropdownDividerItem}\n            />\n          );\n        } else if (\n          prop.props !== undefined &&\n          prop.props[\"data-ref\"] === \"multi\"\n        ) {\n          return (\n            <MenuItem\n              key={key}\n              className={dropdownItem}\n              style={{ overflow: \"visible\", padding: 0 }}\n            >\n              {prop}\n            </MenuItem>\n          );\n        }\n        return (\n          <MenuItem\n            key={key}\n            onClick={() => handleCloseMenu(prop)}\n            className={dropdownItem}\n          >\n            {prop}\n          </MenuItem>\n        );\n      })}\n    </MenuList>\n  );\n  return (\n    <div className={innerDropDown ? classes.innerManager : classes.manager}>\n      <div className={buttonText !== undefined ? \"\" : classes.target}>\n        <Button\n          aria-label=\"Notifications\"\n          aria-owns={anchorEl ? \"menu-list\" : null}\n          aria-haspopup=\"true\"\n          {...buttonProps}\n          onClick={handleClick}\n        >\n          {buttonIcon !== undefined ? (\n            <props.buttonIcon className={classes.buttonIcon} />\n          ) : null}\n          {buttonText !== undefined ? buttonText : null}\n          {caret ? <b className={caretClasses} /> : null}\n        </Button>\n      </div>\n      <Popper\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        transition\n        disablePortal\n        placement={dropPlacement}\n        className={classNames({\n          [classes.popperClose]: !anchorEl,\n          [classes.pooperResponsive]: true,\n          [classes.pooperNav]: Boolean(anchorEl) && navDropdown,\n        })}\n      >\n        {() => (\n          <Grow\n            in={Boolean(anchorEl)}\n            id=\"menu-list\"\n            style={\n              dropup\n                ? { transformOrigin: \"0 100% 0\" }\n                : { transformOrigin: \"0 0 0\" }\n            }\n          >\n            <Paper className={classes.dropdown}>\n              {innerDropDown ? (\n                dropDownMenu\n              ) : (\n                <ClickAwayListener onClickAway={handleClose}>\n                  {dropDownMenu}\n                </ClickAwayListener>\n              )}\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n};\n\nexport default CustomDropdown;\n","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Header/HeaderLinks.jsx",["124","125"],"import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Icon from \"@material-ui/core/Icon\";\nimport CustomDropdown from \"./CustomDropdown\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Apps from \"@material-ui/icons/Apps\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"../../assets/components/headerLinksStyle\";\nimport LineStyle from \"@material-ui/icons/LineStyle\";\nimport Layers from \"@material-ui/icons/Layers\";\n\nconst useStyles = makeStyles(styles);\n\nconst HeaderLinks = (props) => {\n  const easeInOutQuad = (t, b, c, d) => {\n    t /= d / 2;\n    if (t < 1) return (c / 2) * t * t + b;\n    t--;\n    return (-c / 2) * (t * (t - 2) - 1) + b;\n  };\n\n  const smoothScroll = (e, target) => {\n    if (window.location.pathname === \"/sections\") {\n      var isMobile = navigator.userAgent.match(\n        /(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i\n      );\n      if (isMobile) {\n        // if we are on mobile device the scroll into view will be managed by the browser\n      } else {\n        e.preventDefault();\n        var targetScroll = document.getElementById(target);\n        scrollGo(document.documentElement, targetScroll.offsetTop, 1250);\n      }\n    }\n  };\n\n  const scrollGo = (element, to, duration) => {\n    var start = element.scrollTop,\n      change = to - start,\n      currentTime = 0,\n      increment = 20;\n\n    var animateScroll = function () {\n      currentTime += increment;\n      var val = easeInOutQuad(currentTime, start, change, duration);\n      element.scrollTop = val;\n      if (currentTime < duration) {\n        setTimeout(animateScroll, increment);\n      }\n    };\n    animateScroll();\n  };\n\n  const { dropdownHoverColor } = props;\n  const classes = useStyles();\n\n  return (\n    <List className={classes.list}>\n      <ListItem className={classes.listItem}>\n        <CustomDropdown\n          noLiPadding\n          navDropdown\n          hoverColor={dropdownHoverColor}\n          buttonText=\"About US\"\n          buttonProps={{\n            className: classes.navLink,\n            color: \"transparent\",\n          }}\n          buttonIcon={Apps}\n          dropdownList={[\n            <Link to=\"/\" className={classes.dropdownLink}>\n              <LineStyle className={classes.dropdownIcons} /> Presentation Page\n            </Link>,\n            <Link to=\"/\" className={classes.dropdownLink}>\n              <Layers className={classes.dropdownIcons} />\n              All components\n            </Link>,\n            <a\n              href=\"https://demos.creative-tim.com/material-kit-pro-react/#/documentation/tutorial?ref=mkpr-navbar\"\n              target=\"_blank\"\n              className={classes.dropdownLink}\n            >\n              <Icon className={classes.dropdownIcons}>content_paste</Icon>\n              Documentation\n            </a>,\n          ]}\n        />\n      </ListItem>\n    </List>\n  );\n};\n\nexport default HeaderLinks;\n","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/landingPageStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Parallax/Parallax.jsx",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/customDropdownStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Grid/GridContainer.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/buttonStyle.js",[],["126","127"],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/CustomButtons/Button.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/parallaxStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Grid/GridItem.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Layout/Layout.jsx",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/FeaturedSection/FeaturedSection.jsx",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport GridItem from \"../Grid/GridItem\";\nimport GridContainer from \"../Grid/GridContainer\";\nimport featuresStyle from \"../../assets/jss/featuresStyle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ApexAutoMoversService from \"../../service/ApexAutoMoversService\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nconst useStyles = makeStyles(featuresStyle);\n// const libraries = [\"places\"];\nconst libraries = [\"react-places-autocomplete\", \"places\"];\nconst FeaturedSection = (props) => {\n  const classes = useStyles();\n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [originPlaceID, setOriginPlaceID] = useState(\"\");\n  const [destinationPlaceID, setDestinationPlaceID] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [center, setCenter] = useState({\n    lat: 26.27932,\n    lng: -80.247231,\n  });\n  const [travelData, setTravelData] = useState({\n    originLong: null,\n    originLat: null,\n    destinationLong: null,\n    destinationLat: null,\n  });\n  const [markers, setMarkers] = useState([]);\n  const service = new ApexAutoMoversService();\n\n  const handleCalculateDistance = async () => {\n    console.log({ ...travelData }, \" travel data \");\n    try {\n      let response = await service.getDirections();\n      console.log(response, \"calc distance api\");\n    } catch (err) {\n      console.error(err);\n      console.log(\"this failed\");\n    }\n  };\n\n  useEffect(() => {\n    const setCenterCoordinates = () => {\n      if (\n        travelData.originLat &&\n        travelData.originLong &&\n        travelData.destinationLat &&\n        travelData.destinationLong\n      ) {\n        let centeredLat =\n          travelData.originLat > travelData.destinationLat\n            ? travelData.originLat + travelData.destinationLat / 2\n            : travelData.destinationLat + travelData.originLat / 2;\n        let centeredLong =\n          travelData.originLong > travelData.destinationLong\n            ? travelData.originLong + travelData.destinationLong / 2\n            : travelData.originLong + travelData.destinationLong / 2;\n        setCenter({\n          lat: centeredLat,\n          lng: centeredLong,\n        });\n        console.log(\"this triggered because we have new long lat points\");\n      } else {\n        setCenter({\n          lat: travelData.originLat || 26.27932,\n          lng: travelData.originLong || -80.247231,\n        });\n      }\n    };\n\n    setCenterCoordinates();\n  }, [travelData]);\n  const mapRef = useRef();\n  const onMapLoad = useCallback(function callback(map) {\n    // const bounds = new window.google.maps.LatLngBounds();\n    // map.fitBounds(bounds);\n    // setMap(center);\n    mapRef.current = map;\n  }, []);\n\n  // console.log(center, \"center coordinates\");\n\n  const handleSetMakers = (lat, long) => {\n    setMarkers();\n  };\n\n  //   https://maps.googleapis.com/maps/api/directions/json?\n  // origin=sydney,au&destination=perth,au\n  // &waypoints=via:-37.81223%2C144.96254%7Cvia:-34.92788%2C138.60008\n  // &key=YOUR_API_KEY\n\n  const handleOriginValueChange = (value) => {\n    setOrigin(value);\n  };\n\n  const handleDestinationChange = (value) => {\n    setDestination(value);\n  };\n\n  const handleOriginSelected = async (value) => {\n    setLoading(true);\n    setOrigin(value);\n\n    try {\n      let originData = await geocodeByAddress(value);\n      console.log(originData, \"origin  data\");\n      let originLatLongObj = await getLatLng(originData[0]);\n      originLatLongObj.lng = originLatLongObj.lng;\n      originLatLongObj.lat = originLatLongObj.lat;\n      setTravelData({\n        ...travelData,\n        originLong: originLatLongObj.lng,\n        originLat: originLatLongObj.lat,\n      });\n\n      setOriginPlaceID(originData[0].place_id);\n    } catch (err) {\n      console.error(err);\n      console.log(\"origin selected failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDestinationSelected = async (value) => {\n    setLoading(true);\n    setDestination(value);\n    try {\n      let destinationData = await geocodeByAddress(value);\n      let destinationLatLongObj = await getLatLng(destinationData[0]);\n      destinationLatLongObj.lng = destinationLatLongObj.lng;\n      destinationLatLongObj.lat = destinationLatLongObj.lat;\n      setTravelData({\n        ...travelData,\n        destinationLong: destinationLatLongObj.lng,\n        destinationLat: destinationLatLongObj.lat,\n      });\n      setDestinationPlaceID(destinationData[0].place_id[3]);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onUnmount = useCallback(function callback(map) {\n    console.log(center);\n    // setMap(center);\n  }, []);\n\n  // const { isLoaded, loadError } = useLoadScript({\n  //   id:\n  //     \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDZztUmOUlMh9YRZTEQ3jkJeTCt8tt0AYw&libraries=places\",\n  //   googleMapsApiKey: \"AIzaSyBeupeH0c0gpcNrQiF86VNNIBaUATEuHW8\",\n  //   libraries,\n  // });\n\n  const mapContainerStyle = {\n    width: \"400px\",\n    height: \"400px\",\n    border: \"2px solid darkblue\",\n  };\n\n  const isLoaded = true;\n\n  return (\n    <div className=\"cd-section\">\n      <div className={classes.container}>\n        <div className={classes.features3}>\n          <GridContainer>\n            <GridItem xs={12} md={6}>\n              <div>\n                {isLoaded ? (\n                  <>\n                    <GoogleMap\n                      mapContainerStyle={mapContainerStyle}\n                      center={center}\n                      zoom={10}\n                      onLoad={onMapLoad}\n                      // onUnmount={onUnmount}\n                      onClick={(e) => console.log(e)}\n                    >\n                      {/* Child components, such as markers, info windows, etc. */}\n\n                      {travelData.originLong !== null &&\n                        travelData.originLong !== null && (\n                          <Marker\n                            key={1}\n                            position={{\n                              lat: travelData.originLat,\n                              lng: travelData.originLong,\n                            }}\n                          />\n                        )}\n                      {travelData.originLong !== null &&\n                        travelData.originLong !== null && (\n                          <Marker\n                            key={2}\n                            position={{\n                              lat: travelData.destinationLat,\n                              lng: travelData.destinationLong,\n                            }}\n                          />\n                        )}\n                      <></>\n                    </GoogleMap>\n                  </>\n                ) : (\n                  <></>\n                )}\n              </div>\n            </GridItem>\n            <GridItem xs={12} md={6}>\n              <h2 className={classes.title}>\n                The Fastest &amp; Easiest Way to Ship Your Vehicle\n              </h2>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <PlacesAutocomplete\n                    value={origin}\n                    onChange={handleOriginValueChange}\n                    onSelect={handleOriginSelected}\n                  >\n                    {({\n                      getInputProps,\n                      suggestions,\n                      getSuggestionItemProps,\n                      loading,\n                    }) => (\n                      <>\n                        <TextField\n                          {...getInputProps()}\n                          variant=\"outlined\"\n                          label=\"Origin\"\n                          name=\"origin\"\n                          fullWidth\n                        />\n                        {loading && <div> ...loading</div>}\n                        {suggestions.map((suggestion, index) => {\n                          let style = suggestion.active\n                            ? {\n                                backgroundColor: \"lightblue\",\n                                cursor: \"pointer\",\n                              }\n                            : { backgroundColor: \"white\", cursor: \"pointer\" };\n                          return (\n                            <div\n                              key={index}\n                              onClick={() =>\n                                console.log(\n                                  suggestion.description,\n                                  \"suggestion description\"\n                                )\n                              }\n                              {...getSuggestionItemProps(suggestion, {\n                                style,\n                              })}\n                            >\n                              {suggestion.description}\n                            </div>\n                          );\n                        })}\n                      </>\n                    )}\n                  </PlacesAutocomplete>\n                </Grid>\n                <Grid item xs={12}>\n                  {/* // on select id like the long lat info to be thrown into a\n                  marker */}\n                  <PlacesAutocomplete\n                    value={destination}\n                    onChange={handleDestinationChange}\n                    onSelect={handleDestinationSelected}\n                  >\n                    {({\n                      getInputProps,\n                      suggestions,\n                      getSuggestionItemProps,\n                      loading,\n                    }) => (\n                      <>\n                        <TextField\n                          {...getInputProps()}\n                          variant=\"outlined\"\n                          label=\"Destination\"\n                          name=\"destination\"\n                          fullWidth\n                        />\n                        {loading && <div> ...loading</div>}\n                        {suggestions.map((suggestion, index) => {\n                          let style = suggestion.active\n                            ? {\n                                backgroundColor: \"lightblue\",\n                                cursor: \"pointer\",\n                              }\n                            : { backgroundColor: \"white\", cursor: \"pointer\" };\n                          return (\n                            <div\n                              key={index}\n                              onClick={() =>\n                                console.log(\n                                  suggestion,\n                                  \"this is the selected suggestion\"\n                                )\n                              }\n                              {...getSuggestionItemProps(suggestion, {\n                                style,\n                              })}\n                            >\n                              {suggestion.description}\n                            </div>\n                          );\n                        })}\n                      </>\n                    )}\n                  </PlacesAutocomplete>\n                </Grid>\n                <Grid item xs={12} md={6} align=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleCalculateDistance()}\n                  >\n                    Calculate Distance\n                  </Button>\n                </Grid>\n              </Grid>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FeaturedSection;\n","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/jss/featuresStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/headerLinksStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/Footer/Footer.jsx",["143","144","145","146","147"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport styles from \"../../assets/components/footerStyle\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { whiteFont } = props;\n  const footerClasses = classNames({\n    [classes.footer]: true,\n    [classes.footerWhiteFont]: whiteFont,\n  });\n  const aClasses = classNames({\n    [classes.a]: true,\n    [classes.footerWhiteFont]: whiteFont,\n  });\n  return (\n    <footer className={footerClasses}>\n      <div className={classes.container}>\n        <div className={classes.left}>\n          <List className={classes.list}>\n            <ListItem className={classes.inlineBlock}>\n              <a\n                href=\"https://www.creative-tim.com/presentation?ref=mkr-footer\"\n                className={classes.block}\n                target=\"_blank\"\n              >\n                About us\n              </a>\n            </ListItem>\n            <ListItem className={classes.inlineBlock}>\n              <a\n                href=\"http://blog.creative-tim.com/?ref=mkr-footer\"\n                className={classes.block}\n                target=\"_blank\"\n              >\n                Contact\n              </a>\n            </ListItem>\n            <ListItem className={classes.inlineBlock}>\n              <a\n                href=\"https://www.creative-tim.com/license?ref=mkr-footer\"\n                className={classes.block}\n                target=\"_blank\"\n              >\n                Licenses\n              </a>\n            </ListItem>\n          </List>\n        </div>\n        <div className={classes.right}>\n          &copy; {1900 + new Date().getYear()} , Powered by <b>JusGrimmz</b>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/assets/components/footerStyle.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/service/ApexAutoMoversService.js",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/TeamSection/TeamSection.jsx",[],"/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/TeamSection/ProfileCards.jsx",["148","149"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\nimport { IconButton } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst styles = {\n  title: {\n    fontFamily: \"Roboto Slab\",\n    fontWeight: 700,\n  },\n  divider: {\n    maxWidth: \"80%\",\n  },\n  avatar: {\n    width: \"150px\",\n    height: \"150px\",\n    margin: \"2%\",\n    elevation: 2,\n  },\n  card: {\n    width: \"200px\",\n    minHeight: \"300px\",\n  },\n  box: {\n    border: \"2px black solid\",\n  },\n  description: {\n    paddingLeft: \"5%\",\n  },\n  twitterIcon: {\n    color: \"#1DA1F2\",\n  },\n  facebookIcon: {\n    color: \"#4267B2\",\n  },\n  linkedinIcon: {\n    color: \"#0e76a8\",\n  },\n  instagramIcon: {\n    color: \"#800020\",\n  },\n  emailIcon: {\n    color: \"#CFB997\",\n  },\n  iphoneIcon: {\n    color: \"#000000\",\n  },\n};\n\nconst ProfileCards = (props) => {\n  const { image, title, description, socialMedias } = props;\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      direction=\"column\"\n      alignItems=\"center\"\n      style={styles.card}\n    >\n      <Grid item xs={12} align=\"center\" raised>\n        <Avatar style={styles.avatar} alt=\"BradProfilePic\" src={image} />\n      </Grid>\n      <Grid item>\n        <p>{title}</p>\n      </Grid>\n      <Grid item align=\"center\">\n        <Typography textAlign=\"center\" variant=\"caption\">\n          {description}\n        </Typography>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-evenly\" align=\"center\">\n        {socialMedias.twitter && (\n          <IconButton href={socialMedias.twitter}>\n            <TwitterIcon style={styles.twitterIcon} />\n          </IconButton>\n        )}\n        {socialMedias.email && (\n          <IconButton href={`mailto:${socialMedias.email}`}>\n            <EmailIcon style={styles.emailIcon} />\n          </IconButton>\n        )}\n        {socialMedias.instagram && (\n          <IconButton href={socialMedias.instagram}>\n            <InstagramIcon style={styles.instagramIcon} />\n          </IconButton>\n        )}\n        {socialMedias.phoneNumber && (\n          <Tooltip placement=\"top\" title={socialMedias.phoneNumber}>\n            <IconButton styles={styles.iphoneIcon}>\n              <PhoneIphoneIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {socialMedias.LinkedIn && (\n          <IconButton href={socialMedias.LinkedIn}>\n            <LinkedInIcon style={styles.linkedinIcon} />\n          </IconButton>\n        )}\n        {socialMedias.facebook && (\n          <IconButton href={socialMedias.facebook}>\n            <FacebookIcon style={styles.facebookIcon} />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProfileCards;\n","/Users/keem/Desktop/apex-auto-movers/apex-auto-movers/src/components/VehicleSection/VehicleSection.jsx",["150","151","152","153","154","155","156","157","158","159","160","161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":23},{"ruleId":"167","severity":1,"message":"171","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":22},{"ruleId":"167","severity":1,"message":"172","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":20},{"ruleId":"167","severity":1,"message":"173","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":17},{"ruleId":"167","severity":1,"message":"174","line":24,"column":9,"nodeType":"169","messageId":"170","endLine":24,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":80,"column":13,"nodeType":"177","endLine":84,"endColumn":14},{"ruleId":"163","replacedBy":"178"},{"ruleId":"165","replacedBy":"179"},{"ruleId":"167","severity":1,"message":"180","line":12,"column":3,"nodeType":"169","messageId":"170","endLine":12,"endColumn":19},{"ruleId":"167","severity":1,"message":"181","line":18,"column":3,"nodeType":"169","messageId":"170","endLine":18,"endColumn":16},{"ruleId":"167","severity":1,"message":"182","line":20,"column":3,"nodeType":"169","messageId":"170","endLine":20,"endColumn":13},{"ruleId":"167","severity":1,"message":"183","line":25,"column":7,"nodeType":"169","messageId":"170","endLine":25,"endColumn":16},{"ruleId":"167","severity":1,"message":"184","line":30,"column":10,"nodeType":"169","messageId":"170","endLine":30,"endColumn":23},{"ruleId":"167","severity":1,"message":"185","line":31,"column":10,"nodeType":"169","messageId":"170","endLine":31,"endColumn":28},{"ruleId":"167","severity":1,"message":"186","line":32,"column":10,"nodeType":"169","messageId":"170","endLine":32,"endColumn":17},{"ruleId":"167","severity":1,"message":"187","line":44,"column":10,"nodeType":"169","messageId":"170","endLine":44,"endColumn":17},{"ruleId":"167","severity":1,"message":"188","line":99,"column":9,"nodeType":"169","messageId":"170","endLine":99,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":124,"column":30,"nodeType":"191","messageId":"192","endLine":124,"endColumn":50},{"ruleId":"189","severity":1,"message":"193","line":125,"column":30,"nodeType":"191","messageId":"192","endLine":125,"endColumn":50},{"ruleId":"189","severity":1,"message":"194","line":146,"column":35,"nodeType":"191","messageId":"192","endLine":146,"endColumn":60},{"ruleId":"189","severity":1,"message":"195","line":147,"column":35,"nodeType":"191","messageId":"192","endLine":147,"endColumn":60},{"ruleId":"167","severity":1,"message":"196","line":161,"column":9,"nodeType":"169","messageId":"170","endLine":161,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":164,"column":6,"nodeType":"199","endLine":164,"endColumn":8,"suggestions":"200"},{"ruleId":"167","severity":1,"message":"201","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":16},{"ruleId":"167","severity":1,"message":"202","line":17,"column":9,"nodeType":"169","messageId":"170","endLine":17,"endColumn":17},{"ruleId":"175","severity":1,"message":"176","line":27,"column":15,"nodeType":"177","endLine":31,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":36,"column":15,"nodeType":"177","endLine":40,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":45,"column":15,"nodeType":"177","endLine":49,"endColumn":16},{"ruleId":"167","severity":1,"message":"203","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"204","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"205","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":12},{"ruleId":"167","severity":1,"message":"206","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":18},{"ruleId":"167","severity":1,"message":"207","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":19},{"ruleId":"167","severity":1,"message":"208","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":19},{"ruleId":"167","severity":1,"message":"209","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":15},{"ruleId":"167","severity":1,"message":"210","line":101,"column":9,"nodeType":"169","messageId":"170","endLine":101,"endColumn":20},{"ruleId":"211","severity":1,"message":"212","line":114,"column":31,"nodeType":"213","messageId":"214","endLine":114,"endColumn":33},{"ruleId":"197","severity":1,"message":"215","line":123,"column":6,"nodeType":"199","endLine":123,"endColumn":15,"suggestions":"216"},{"ruleId":"197","severity":1,"message":"217","line":137,"column":6,"nodeType":"199","endLine":137,"endColumn":15,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":193,"column":37,"nodeType":"221","messageId":"222","endLine":193,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":193,"column":61,"nodeType":"221","messageId":"222","endLine":193,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":286,"column":37,"nodeType":"221","messageId":"222","endLine":286,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":286,"column":55,"nodeType":"221","messageId":"222","endLine":286,"endColumn":57},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'FeaturedSection' is defined but never used.","Identifier","unusedVar","'VehicleSection' is defined but never used.","'ViewCarousel' is defined but never used.","'PropTypes' is defined but never used.","'smoothScroll' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["223"],["224"],"'geocodeByPlaceId' is defined but never used.","'useLoadScript' is defined but never used.","'InfoWindow' is defined but never used.","'libraries' is assigned a value but never used.","'originPlaceID' is assigned a value but never used.","'destinationPlaceID' is assigned a value but never used.","'loading' is assigned a value but never used.","'markers' is assigned a value but never used.","'handleSetMakers' is assigned a value but never used.","no-self-assign","'originLatLongObj.lng' is assigned to itself.","MemberExpression","selfAssignment","'originLatLongObj.lat' is assigned to itself.","'destinationLatLongObj.lng' is assigned to itself.","'destinationLatLongObj.lat' is assigned to itself.","'onUnmount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'center'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'Favorite' is defined but never used.","'aClasses' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","'handleReset' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'service'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'service' and 'vehYear'. Either include them or remove the dependency array.",["227"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [center]",{"range":"234","text":"235"},"Update the dependencies array to be: [service, vehYear]",{"range":"236","text":"237"},"Update the dependencies array to be: [service, vehMake, vehYear]",{"range":"238","text":"239"},[5067,5069],"[center]",[3468,3477],"[service, vehYear]",[3875,3884],"[service, vehMake, vehYear]"]